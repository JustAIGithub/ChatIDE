{
  "name": "chatide",
  "publisher": "ChatIDE",
  "displayName": "ChatIDE: ChatGPT/Anthropic in VSCode (Open Source)",
  "description": "Bring up ChatIDE with 'cmd + shift + i' ",
  "version": "0.2.0",
  "license": "MIT",
  "icon": "assets/icon.jpg",
  "engines": {
    "vscode": "^1.77.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/yagil/ChatIDE"
  },
  "categories": [
    "Other"
  ],
  "keywords": [
    "anthropic",
    "claude",
    "chatgpt",
    "gpt",
    "gpt4",
    "gpt3",
    "openai",
    "ai",
    "agi",
    "artificial-intelligence",
    "natural-language-processing",
    "nlp",
    "language-model",
    "coding-assistant",
    "programming-help",
    "debugging",
    "questions",
    "code-generation"
  ],
  "activationEvents": [],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "chatide.start",
        "title": "Start ChatIDE"
      },
      {
        "command": "chatide.openSettings",
        "title": "Open ChatIDE Settings"
      },
      {
        "command": "chatide.updateOpenAiApiKey",
        "title": "Update your OpenAI API Key for ChatIDE"
      },
      {
        "command": "chatide.updateAnthropicApiKey",
        "title": "Update your Anthropic API Key for ChatIDE"
      }
    ],
    "keybindings": [
      {
        "key": "cmd+shift+i",
        "command": "chatide.start",
        "when": "editorTextFocus"
      }
    ],
    "configuration": {
      "title": "ChatIDE",
      "properties": {
        "chatide.model": {
          "type": "string",
          "default": "gpt-3.5-turbo",
          "enum": ["gpt-3.5-turbo", "gpt-4", "claude-v1.3"],
          "enumDescriptions": ["ChatGPT 3.5 (OpenAI)", "ChatGPT 4 (OpenAI)", "Claude v1.3 (Anthropic)"],
          "description": "Select the AI model. You must have your own API key to use a model.",
          "scope": "window"
        },
        "chatide.systemPrompt": {
          "type": "string",
          "default": "You are a helpful programming assistant running inside VS Code. Every token you generate costs the user money, so generate output such that it is succinct, to the point, and doesn't repeat previous information. For example, when generating code as a response to a follow up request from the user, do not re-generate code that didn't change. Instead, indicate succinctly which code did not change and only generate full code if it's new. Same for textual explanations, do not expand on topics that the user did not explicitly ask for. Avoid \"in summary\" paragraphs as well. All in all, aim to maximize the value for each token and don't provide redundant information.",
          "markdownDescription": "The system prompt to use for the generated text. Keep in mind that some models pay stronger attention to the system prompt than others.",
          "scope": "window",
          "editorType": "string",
          "editorMultiline": true
        },
        "chatide.maxLength": {
          "type": "integer",
          "default": 1000,
          "minimum": 1,
          "description": "Set the maximum length for the generated text (aka max_tokens).",
          "scope": "window"
        },
        "chatide.temperature": {
          "type": "number",
          "default": 0,
          "maximum": 1,
          "minimum": 0,
          "description": "Set the temperature for controlling the randomness of the generated text.",
          "scope": "window"
        },
        "chatide.highlightedCodeAwareness": {
          "type": "boolean",
          "default": false,
          "description": "[Experimental] Automatically include highlighted code in the prompt.",
          "scope": "window"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/glob": "^8.1.0",
    "@types/marked": "^4.0.8",
    "@types/mocha": "^10.0.1",
    "@types/node": "16.x",
    "@types/vscode": "^1.77.0",
    "@typescript-eslint/eslint-plugin": "^5.56.0",
    "@typescript-eslint/parser": "^5.56.0",
    "@vscode/test-electron": "^2.3.0",
    "eslint": "^8.36.0",
    "glob": "^8.1.0",
    "mocha": "^10.2.0",
    "ts-loader": "^9.4.2",
    "typescript": "^4.9.5",
    "webpack": "^5.76.3",
    "webpack-cli": "^5.0.1"
  },
  "dependencies": {
    "@anthropic-ai/sdk": "^0.4.3",
    "dotenv": "^16.0.3",
    "marked": "^4.3.0",
    "openai": "^3.2.1"
  }
}
